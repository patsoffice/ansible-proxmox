---
- import_tasks: ubuntu_setup.yml
  vars:
    packages:
      - build-essential
      - freeipa-client
      - git
      - kstart
      - libyaml-dev
      - nfs-common
      - nfs4-acl-tools
      - python3-dev
      - python3-pip
      - python3-setuptools
      - python3-venv
      - python3-wheel
      - rdiff-backup
  tags:
    - octoprint

- import_tasks: idm_client_setup.yml
  vars:
    username: octoprint
    groupname: octoprint
    password: '{{ octoprint.password }}'
    homedirectory: /config
    loginshell: /usr/bin/bash
  tags:
    - octoprint

- import_tasks: idm_service_setup.yml
  vars:
    service_principal_name: 'nfs/{{ container_hostname }}'
  tags:
    - octoprint

- import_tasks: idm_systemd_user_setup.yml
  vars:
    username: octoprint
    groupname: octoprint
  tags:
    - octoprint

- import_tasks: appdir_and_mountpoints_v4.yml
  vars:
    appdirs:
      - path: /config
        owner: octoprint
        group: octoprint
      - path: /opt/python
        owner: octoprint
        group: octoprint
    mountpoints:
      - src: '{{ backup_host_v4 }}:{{ backup_path_v4 }}'
        dest: /backups
        owner: '{{ backup_owner }}'
        group: '{{ backup_group }}'
  tags:
    - octoprint

- name: Ensure the virtual environment is created
  ansible.builtin.shell:
    cmd: python3 -m venv python
    chdir: /opt
  become: true
  become_user: octoprint
  tags:
    - octoprint

- name: Install Octoprint and its dependencies into the venv
  ansible.builtin.pip:
    name: octoprint
    state: latest
    virtualenv: /opt/python
    virtualenv_site_packages: true
  become: true
  become_user: octoprint
  register: pip_install
  tags:
    - octoprint

- name: Check that /config/config.yaml exists
  ansible.builtin.stat:
    path: /config/config.yaml
  register: octoprint_config
  tags:
    - octoprint

- name: Restore the backup (if it exists and is necessary)
  ansible.builtin.command:
    cmd: rdiff-backup --api-version 201 --force restore /backups/octoprint/ /config/
  ignore_errors: true
  become: true
  become_user: octoprint
  when: not octoprint_config.stat.exists
  tags:
    - octoprint

- name: Change dev node group
  ansible.builtin.file:
    path: /dev/ttyACM0
    state: file
    group: octoprint
  tags:
    - octoprint

- import_tasks: systemd_unit.yml
  vars:
    systemd_unit: 'octoprint.service'
    state: '{{ pip_install.changed | ternary("restarted", "started") }}'
  tags:
    - octoprint

- import_tasks: unbound_external_dns.yml
  tags:
    - octoprint

- import_tasks: reverse_proxy.yml
  tags:
    - octoprint

- import_tasks: backup_v4.yml
  vars:
    backup_src: '/config'
    backup_dest: '/backups/octoprint'
    backup_dir_name: octoprint
    backup_owner: octoprint
    backup_group: octoprint
  tags:
    - octoprint
