---
- name: Download the repo key
  ansible.builtin.get_url:
    url: https://downloads.plex.tv/plex-keys/PlexSign.key
    dest: /etc/apt/trusted.gpg.d/plex.asc
  tags:
    - plex

- name: Install the apt repo
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64,signed-by=/etc/apt/trusted.gpg.d/plex.asc] https://downloads.plex.tv/repo/deb/ public main"
    state: present
    filename: plex
  tags:
    - plex

- name: create the systemd override directory
  ansible.builtin.file:
    path: /etc/systemd/system/plexmediaserver.service.d
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - plex

- name: copy the service file to systemd's location
  ansible.builtin.copy:
    src: override.conf
    dest: /etc/systemd/system/plexmediaserver.service.d/override.conf
    mode: 0644
    owner: root
    group: root
  register: systemd_service_unit_override
  tags:
    - plex

- name: Enable the service and set the state
  ansible.builtin.systemd:
    daemon_reload: '{{ systemd_service_unit_override.changed }}'
  tags:
    - plex

- import_tasks: ubuntu_setup.yml
  vars:
    packages:
      - apt-transport-https
      - freeipa-client
      - kstart
      - gnupg
      - intel-opencl-icd
      - nfs-common
      - nfs4-acl-tools
      - ocl-icd-libopencl1
      - rdiff-backup
      - software-properties-common
      - va-driver-all
  tags:
    - plex

- import_tasks: idm_client_setup.yml
  vars:
    username: plexmediaserver
    groupname: media
    homedirectory: /plex
    loginshell: /usr/bin/bash
  tags:
    - plex

- import_tasks: idm_service_setup.yml
  vars:
    service_principal_name: 'nfs/{{ container_hostname }}'
  tags:
    - plex

- import_tasks: idm_systemd_user_setup.yml
  vars:
    username: plexmediaserver
    groupname: media
  tags:
    - plex

- import_tasks: appdir_and_mountpoints_v4.yml
  vars:
    appdirs:
      - path: /config
        owner: plexmediaserver
        group: media
    mountpoints:
      - src: '{{ backup_host_v4 }}:{{ backup_path_v4 }}'
        dest: /backups
        owner: plexmediaserver
        group: media
      - src: '{{ live_tv_host_v4 }}:{{ live_tv_path_v4 }}'
        dest: /mnt/live-tv
        mode: '0775'
      - src: '{{ movies_host_v4 }}:{{ movies_path_v4 }}'
        dest: /mnt/movies
        mode: '0775'
      - src: '{{ music_host_v4 }}:{{ music_path_v4 }}'
        dest: /mnt/music
        mode: '0775'
      - src: '{{ plex_transcode_host_v4 }}:{{ plex_transcode_path_v4 }}'
        dest: /transcode
        owner: plexmediaserver
        group: media
        mode: '0775'
      - src: '{{ tv_host_v4 }}:{{ tv_path_v4 }}'
        dest: /mnt/tv
        mode: '0775'
  tags:
    - plex

- name: Check that /config/Library/Application Support/Plex Media Server/Preferences.xml exists
  ansible.builtin.stat:
    path: /config/Library/Application Support/Plex Media Server/Preferences.xml
  register: preferences_xml
  tags:
    - plex

- name: Restore the backup (if it exists and is necessary)
  ansible.builtin.command:
    cmd: rdiff-backup --api-version 201 --force restore /backups/plex/ /config/
  ignore_errors: true
  become: true
  become_user: plexmediaserver
  when: not preferences_xml.stat.exists
  tags:
    - plex

- import_tasks: rsyslog_conf.yml
  vars:
    syslog_identifier: plex
  tags:
    - plex

- name: install Plex Media Server
  ansible.builtin.apt:
    name: plexmediaserver
    state: present
  tags:
    - plex

- import_tasks: unbound_external_dns.yml
  tags:
    - plex

- import_tasks: reverse_proxy.yml
  tags:
    - plex

- import_tasks: backup_v4.yml
  vars:
    backup_src: /config
    backup_dest: /backups/plex
    backup_dir_name: plex
    backup_owner: plexmediaserver
    backup_group: media
  tags:
    - plex
