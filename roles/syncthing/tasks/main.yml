---
- import_tasks: ubuntu_setup.yml
  vars:
    packages:
      - freeipa-client
      - git
      - kstart
      - nfs-common
      - nfs4-acl-tools
      - rdiff-backup
      - xmlstarlet
  tags:
    - syncthing

- import_tasks: appdir_and_mountpoints.yml
  vars:
    appdirs:
      - path: /opt/syncthing/bin
        owner: root
        group: root
  tags:
    - syncthing

- name: Get Go URL version
  ansible.builtin.set_fact:
    go_web_version: "{{ syncthing_go_url | regex_search('/go([\\d.]+).linux-amd64.tar.gz', '\\1') | first }}"
  tags:
    - syncthing

- name: Check that /opt/go/bin/go exists
  ansible.builtin.stat:
    path: /opt/go/bin/go
  register: go_bin
  tags:
    - syncthing

- name: Get the installed go version
  ansible.builtin.shell:
    cmd: "/opt/go/bin/go version | awk -F'version ' '{print $2}' | awk '{print $1}' | sed 's/go//'"
  register: go_file_version
  when: go_bin.stat.exists
  changed_when: false
  tags:
    - syncthing

- name: Set a default go file version
  ansible.builtin.set_fact:
    go_file_version:
      stdout: 'missing'
  when: go_file_version.stdout is undefined
  tags:
    - syncthing

- name: Download go
  ansible.builtin.get_url:
    url: '{{ syncthing_go_url }}'
    dest: /tmp/go.tar.gz
  when: go_web_version != go_file_version.stdout
  tags:
    - syncthing

- name: Extract the go tarball
  ansible.builtin.unarchive:
    src: /tmp/go.tar.gz
    dest: /opt
    remote_src: true
  when: go_web_version != go_file_version.stdout
  tags:
    - syncthing

- name: Remove the go tarball
  ansible.builtin.file:
    path: /opt/go.tar.gz
    state: absent
  when: go_web_version != go_file_version.stdout
  tags:
    - syncthing

- name: Check that /opt/syncthing/bin/syncthing exists
  ansible.builtin.stat:
    path: /opt/syncthing/bin/syncthing
  register: syncthing_bin
  tags:
    - syncthing

- name: Get the installed version
  ansible.builtin.shell:
    cmd: "/opt/syncthing/bin/syncthing -version 2>&1 | awk '{ print $2 }'"
  register: file_version
  when: syncthing_bin.stat.exists
  changed_when: false
  tags:
    - syncthing

- name: Set a default syncthing file version
  ansible.builtin.set_fact:
    file_version:
      stdout: 'missing'
  when: file_version.stdout is undefined
  tags:
    - syncthing

- name: checkout syncthing
  ansible.builtin.git:
    repo: https://github.com/syncthing/syncthing.git
    dest: /opt/syncthing-src
    version: '{{ syncthing_version }}'
    recursive: true
  when: syncthing_version != file_version.stdout
  tags:
    - syncthing

- name: build syncthing
  ansible.builtin.shell:
    cmd: PATH=$PATH:/opt/go/bin go run build.go
    chdir: /opt/syncthing-src
  when: syncthing_version != file_version.stdout
  tags:
    - syncthing

- name: copy the syncthing binary
  ansible.builtin.copy:
    src: /opt/syncthing-src/bin/syncthing
    dest: /opt/syncthing/bin/syncthing
    remote_src: yes
    mode: '0755'
    owner: root
    group: root
  when: syncthing_version != file_version.stdout
  tags:
    - syncthing

- name: remove the build directory
  ansible.builtin.file:
    path: /opt/syncthing-src
    state: absent
  when: syncthing_version != file_version.stdout
  tags:
    - syncthing

- import_tasks: idm_client_setup.yml
  vars:
    username: syncthing
    password: '{{ syncthing.password }}'
  tags:
    - syncthing

- import_tasks: idm_service_setup.yml
  vars:
    service_principal_name: 'nfs/{{ container_hostname }}'
  tags:
    - syncthing

- import_tasks: idm_systemd_user_setup.yml
  vars:
    username: syncthing
    groupname: syncthing
  tags:
    - syncthing

- import_tasks: appdir_and_mountpoints_v4.yml
  vars:
    appdirs:
      - path: /home/syncthing
        owner: syncthing
        group: syncthing
    mountpoints:
      - src: '{{ backup_host_v4 }}:{{ backup_path_v4 }}'
        dest: /backups
        mode: '0775'
        owner: syncthing
        group: syncthing
  tags:
    - syncthing

- name: Check if the config /home/syncthing/.local/state/syncthing/config.xml exists
  ansible.builtin.stat:
    path: /home/syncthing/.local/state/syncthing/config.xml
  register: syncthing_config
  tags:
    - syncthing

- name: Restore the backup (if it exists and is necessary)
  ansible.builtin.command:
    cmd: rdiff-backup --api-version 201 --force -v7 restore /backups/syncthing/ /home/syncthing/
  ignore_errors: true
  when: not syncthing_config.stat.exists
  tags:
    - syncthing

- name: copy the service file to systemd's location
  ansible.builtin.copy:
    src: syncthing@.service
    dest: /etc/systemd/system/syncthing@.service
    mode: 0644
    owner: root
    group: root
  register: systemd_service_unit
  tags:
    - syncthing

- name: Enable the service and set the state
  ansible.builtin.systemd:
    daemon_reload: '{{ systemd_service_unit.changed }}'
    name: syncthing@syncthing.service
  tags:
    - syncthing

- name: Check (again) if the config /home/syncthing/.local/state/syncthing/config.xml exists
  ansible.builtin.stat:
    path: /home/syncthing/.local/state/syncthing/config.xml
  register: syncthing_config
  tags:
    - syncthing

- name: Start the service to generate the config if it doesn't exist
  ansible.builtin.systemd:
    state: started
    name: syncthing@syncthing.service
  when: not syncthing_config.stat.exists
  tags:
    - syncthing

- name: Delay to allow the serivce to start
  ansible.builtin.wait_for:
    path: /home/syncthing/.local/state/syncthing/config.xml
  when: not syncthing_config.stat.exists
  tags:
    - syncthing

- name: Get the GUI address
  ansible.builtin.command:
    cmd: xmlstarlet sel -t -v configuration/gui/address /home/syncthing/.local/state/syncthing/config.xml
  register: gui_address
  changed_when: false
  tags:
    - syncthing

- name: Update the GUI address
  ansible.builtin.command:
    cmd: xmlstarlet ed -L -u configuration/gui/address -v 0.0.0.0:8384 /home/syncthing/.local/state/syncthing/config.xml
  when: gui_address.stdout == '127.0.0.1:8384'
  tags:
    - syncthing

- name: Restart and enable the service
  ansible.builtin.systemd:
    state: '{{ (syncthing_version != file_version.stdout) | ansible.builtin.ternary("restarted", "started") }}'
    enabled: true
    name: syncthing@syncthing.service
  tags:
    - syncthing

- import_tasks: unbound_external_dns.yml
  tags:
    - syncthing

- import_tasks: reverse_proxy.yml
  tags:
    - syncthing

- import_tasks: backup_v4.yml
  vars:
    backup_src: /home/syncthing
    backup_dest: /backups/syncthing
    backup_dir_name: syncthing
    backup_owner: syncthing
    backup_group: syncthing
  tags:
    - syncthing
