---
- import_tasks: ubuntu_setup.yml
  vars:
    packages:
      - freeipa-client
      - git
      - kstart
      - nfs-common
      - nfs4-acl-tools
      - python3
      - python3-dev
      - python3-pip
      - python3-venv
      - rdiff-backup
  tags:
    - tautulli

- import_tasks: idm_client_setup.yml
  vars:
    username: tautulli
    password: '{{ test.password }}'
    homedirectory: /opt/tautulli
    loginshell: /usr/bin/bash
  tags:
    - tautulli

- import_tasks: idm_service_setup.yml
  vars:
    service_principal_name: 'nfs/{{ container_hostname }}'
  tags:
    - tautulli

- import_tasks: idm_systemd_user_setup.yml
  vars:
    username: tautulli
    groupname: tautulli
  tags:
    - tautulli

- import_tasks: appdir_and_mountpoints_v4.yml
  vars:
    appdirs:
      - path: /config
        owner: tautulli
        group: tautulli
      - path: /opt/tautulli
        owner: tautulli
        group: tautulli
      - path: /opt/python
        owner: tautulli
        group: tautulli
    mountpoints:
      - src: '{{ backup_host_v4 }}:{{ backup_path_v4 }}'
        dest: /backups
        mode: '0775'
        owner: tautulli
        group: tautulli
  tags:
    - tautulli

- name: Get Tautulli URL version
  ansible.builtin.set_fact:
    web_version: "{{ tautulli_package_url | regex_search('tags/(v[\\d.]+).tar.gz', '\\1') | first }}"
  tags:
    - tautulli

- name: Check that /opt/tautulli/tautulli/version.py exists
  ansible.builtin.stat:
    path: /opt/tautulli/plexpy/version.py
  register: tautulli_version
  tags:
    - tautulli

- name: Get the installed version
  ansible.builtin.shell:
    cmd: "/usr/bin/grep ^PLEXPY_RELEASE_VERSION /opt/tautulli//plexpy/version.py | awk -F\\\" '{print $2}'"
  register: file_version
  when: tautulli_version.stat.exists
  changed_when: false
  tags:
    - tautulli

- name: Set a default Tautulli file version
  ansible.builtin.set_fact:
    file_version:
      stdout: 'missing'
  when: file_version.stdout is undefined
  tags:
    - tautulli

- name: Download tautulli
  ansible.builtin.get_url:
    url: '{{ tautulli_package_url }}'
    dest: /opt/tautulli/tautulli.tar.gz
  when: web_version != file_version.stdout
  tags:
    - tautulli

- name: Extract the tautulli package
  ansible.builtin.unarchive:
    src: /opt/tautulli/tautulli.tar.gz
    dest: /opt/tautulli
    remote_src: true
    extra_opts:
      - '--strip-components=1'
  no_log: true
  when: web_version != file_version.stdout
  tags:
    - tautulli

- name: update the version.txt
  template:
    src: 'version.txt'
    dest: '/opt/tautulli/version.txt'
    mode: 0644
    owner: root
    group: root
  when: web_version != file_version.stdout
  tags:
    - tautulli

- name: Ensure the virtual environment is created
  ansible.builtin.shell:
    cmd: python3 -m venv python
    chdir: /opt/
  become: true
  become_user: tautulli
  tags:
    - tautulli

- name: Install the requirements
  ansible.builtin.pip:
    requirements: /opt/tautulli/requirements.txt
    virtualenv: /opt/python
    virtualenv_site_packages: true
  become: true
  become_user: tautulli
  tags:
    - tautulli

- name: Install pyopenssl
  ansible.builtin.pip:
    name: pyopenssl
    virtualenv: /opt/python
    virtualenv_site_packages: true
  become_user: tautulli
  tags:
    - tautulli

- name: Check that /config/tautulli.db exists
  ansible.builtin.stat:
    path: /config/tautulli.db
  register: tautulli_db
  tags:
    - tautulli

- name: Restore the backup (if it exists and is necessary)
  ansible.builtin.command:
    cmd: rdiff-backup --api-version 201 --force restore /backups/tautulli/ /config/
  ignore_errors: true
  when: not tautulli_db.stat.exists
  tags:
    - tautulli

- import_tasks: systemd_unit.yml
  vars:
    systemd_unit: 'tautulli.service'
    state: '{{ (web_version != file_version.stdout) | ansible.builtin.ternary("restarted", "started") }}'
  tags:
    - tautulli

- import_tasks: unbound_external_dns.yml
  tags:
    - tautulli

- import_tasks: reverse_proxy.yml
  tags:
    - tautulli

- import_tasks: backup_v4.yml
  vars:
    backup_src: '/config'
    backup_dest: '/backups/tautulli'
    backup_dir_name: tautulli
    backup_owner: tautulli
    backup_group: tautulli
  tags:
    - tautulli
