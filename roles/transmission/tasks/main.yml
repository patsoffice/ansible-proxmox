---
- import_tasks: ubuntu_setup.yml
  vars:
    packages:
      - build-essential
      - cmake
      - freeipa-client
      - git
      - kstart
      - libcurl4-openssl-dev
      - libssl-dev
      - libsystemd-dev
      - nfs-common
      - nfs4-acl-tools
      - rdiff-backup
  tags:
    - transmission

- name: Check that /opt/transmission/bin/transmission-show exists
  ansible.builtin.stat:
    path: /opt/transmission/bin/transmission-show
  register: transmission_show
  tags:
    - transmission

- name: Get the installed version
  ansible.builtin.shell:
    cmd: "/opt/transmission/bin/transmission-show --version 2>&1 | awk '{ print $2 }'"
  register: file_version
  when: transmission_show.stat.exists
  changed_when: false
  tags:
    - transmission

- name: Set a default transmission file version
  ansible.builtin.set_fact:
    file_version:
      stdout: 'missing'
  when: file_version.stdout is undefined
  tags:
    - transmission

- name: checkout transmission
  ansible.builtin.git:
    repo: https://github.com/transmission/transmission.git
    dest: /opt/transmission-src
    version: '{{ transmission_version }}'
    recursive: true
  when: transmission_version != file_version.stdout
  tags:
    - transmission

- name: build and install transmission
  ansible.builtin.shell:
    cmd: |
      cmake -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_DAEMON=ON -DENABLE_QT=OFF -DENABLE_UTILS=ON -DENABLE_CLI=OFF -DENABLE_GTK=OFF  -DENABLE_MAC=OFF -DWITH_SYSTEMD=ON -DCMAKE_INSTALL_PREFIX=/opt/transmission &&
      cmake --build build &&
      cmake --install build
    chdir: /opt/transmission-src
  when: transmission_version != file_version.stdout
  tags:
    - transmission

- name: remove the build directory
  ansible.builtin.file:
    path: /opt/transmission-src
    state: absent
  when: transmission_version != file_version.stdout
  tags:
    - transmission

- import_tasks: idm_client_setup.yml
  vars:
    username: transmission
    groupname: media
    password: '{{ transmission.password }}'
  tags:
    - transmission

- import_tasks: idm_service_setup.yml
  vars:
    service_principal_name: 'nfs/{{ container_hostname }}'
  tags:
    - transmission

- import_tasks: idm_systemd_user_setup.yml
  vars:
    username: transmission
    groupname: media
    wanted_by_unit: transmission-daemon.service
  tags:
    - transmission

- import_tasks: appdir_and_mountpoints_v4.yml
  vars:
    appdirs:
      - path: /var/lib/transmission-daemon/bin/
        owner: transmission
        group: transmission
    mountpoints:
      - src: '{{ download_host_v4 }}:{{ download_path_v4 }}'
        dest: /downloads
        mode: '0775'
        owner: transmission
        group: media
      - src: '{{ backup_host_v4 }}:{{ backup_path_v4 }}'
        dest: /backups
        mode: '0770'
        owner: transmission
        group: media
  tags:
    - transmission

- name: check if /var/lib/transmission-daemon/settings.json exists
  ansible.builtin.stat:
    path: /var/lib/transmission-daemon/settings.json
  register: settings_json
  tags:
    - transmission

- name: copy the config
  ansible.builtin.copy:
    src: settings.json
    dest: /var/lib/transmission-daemon/settings.json
    mode: 0600
    owner: transmission
    group: transmission
  when: not settings_json.stat.exists
  tags:
    - transmission

- import_tasks: systemd_unit.yml
  vars:
    systemd_unit: 'transmission-daemon.service'
    state: '{{ (transmission_version != file_version.stdout) | ternary("restarted", "started") }}'
  tags:
    - transmission

- name: copy remove-done-torrent script
  ansible.builtin.copy:
    src: 'remove-done-torrent'
    dest: '/var/lib/transmission-daemon/bin/remove-done-torrent'
    mode: 0700
    owner: transmission
    group: transmission
  tags:
    - transmission

- name: update blocklist cron job
  ansible.builtin.cron:
    name: blocklist update
    minute: "0"
    hour: "23"
    user: transmission
    job: '/opt/transmission/bin/transmission-remote --blocklist-update &> /dev/null'
    cron_file: transmission-blocklist-update
  tags:
    - transmission

- name: remove done torrent cron job
  ansible.builtin.cron:
    name: remove done torrent
    minute: '*/5'
    user: transmission
    job: '/opt/transmission/bin/remove-done-torrent &> /dev/null'
    cron_file: remove-done-torrent
  tags:
    - transmission

- import_tasks: unbound_external_dns.yml
  tags:
    - transmission

- import_tasks: reverse_proxy.yml
  tags:
    - transmission

- import_tasks: backup_v4.yml
  vars:
    backup_src: '/var/lib/transmission'
    backup_dest: '/backups/transmission'
    backup_dir_name: transmission
    backup_owner: transmission
    backup_group: transmission
  tags:
    - transmission
