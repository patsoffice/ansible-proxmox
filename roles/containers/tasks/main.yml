---
- name: Check if containers are present
  ansible.builtin.set_fact:
    has_containers: "{{ proxmox_containers != '' | default(false) }}"
  tags:
    - containers

- name: Install the package "python3-proxmoxer"
  ansible.builtin.apt:
    name: python3-proxmoxer
  when: has_containers
  tags:
    - containers

- name: Download container template(s)
  community.general.proxmox_template:
    node: '{{ proxmox_node }}'
    api_user: '{{ proxmox_api_user }}'
    api_password: '{{ proxmox_api_password }}'
    api_host: '{{ proxmox_api_host }}'
    storage: local
    content_type: vztmpl
    template: '{{ item.ostemplate }}'
  loop: '{{ [] if proxmox_containers == "" else proxmox_containers }}'
  no_log: true
  tags:
    - containers

- name: run the host tasks
  ansible.builtin.include_tasks: '{{ item }}.yml'
  loop: '{{ proxmox_host_tasks }}'
  tags:
    - containers

# - name: debug
#   ansible.builtin.debug:
#     msg: "{{ item.config_task is defined and 'all' in ansible_run_tags }}: {{ item.config_task }}, {{ ansible_run_tags }}"
#   loop: '{{ [] if proxmox_containers == "" else proxmox_containers }}'
#   tags:
#     - containers

# - name: pause
#   ansible.builtin.pause:
#   tags:
#     - containers

- name: run container task
  ansible.builtin.include_tasks: container.yml
  when: (item.config_task is defined and "all" in ansible_run_tags) or (item.config_task is defined and item.config_task in ansible_run_tags and item.config_task not in ansible_skip_tags)
  loop: '{{ [] if proxmox_containers == "" else proxmox_containers }}'
  no_log: true
  tags:
    - containers
